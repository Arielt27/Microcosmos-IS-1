/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.AreaLaboral;
import com.clases.Empleados;
import com.clases.Proveedores;
import com.clases.Sexo;
import com.clases.TipoDocumento;
import com.dao.AreaLaboralJpaController;
import com.dao.EmpleadosJpaController;
import com.dao.SexoJpaController;
import com.dao.TipoDocumentoJpaController;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author david
 */
public class FmrEmpleados extends javax.swing.JFrame {
    
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
                    
    Empleados objEmpleados = new Empleados();
    SexoJpaController daoSexo = new SexoJpaController();
    AreaLaboralJpaController daoArea = new AreaLaboralJpaController();
    EmpleadosJpaController daoEmpleados = new EmpleadosJpaController();
    TipoDocumentoJpaController daoTipoDocumento = new TipoDocumentoJpaController();
    
    DefaultTableModel t;
    
    /**
     * Creates new form Empleados
     */
    public FmrEmpleados() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //ÍCONO
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        
        //INICIALIZAR
        actualizarEmpleados();
        listaTipoDocumento();
        listaGenero();
        listaArea();
        Txt_Activar.setVisible(false);
        Btn_Editar.setEnabled(false);
        Btn_Limpiar.setEnabled(true);
        Btn_Activar_Desactivar.setEnabled(false);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tbl_Empleados = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Txt_Activo = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Txt_IdEmpleados = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Txt_NombreEmpleado = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Txt_Apellido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Txt_Telefono = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Txt_Direccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Txt_Correo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CBox_TipoDoc = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Txt_Documento = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        CBox_Genero = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        CBox_Area = new javax.swing.JComboBox<>();
        Txt_Activar = new javax.swing.JTextField();
        Txt_Fecha = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        Btn_Añadir = new javax.swing.JButton();
        Btn_Editar = new javax.swing.JButton();
        Btn_Activar_Desactivar = new javax.swing.JButton();
        Btn_Limpiar = new javax.swing.JButton();
        Btn_Regresar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Empleados - Microcosmos");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        Tbl_Empleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido", "Teléfono", "Dirección", "Correo", "TipoDocumento", "Documento", "Fecha", "Género", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl_Empleados.getTableHeader().setReorderingAllowed(false);
        Tbl_Empleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_EmpleadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tbl_Empleados);
        if (Tbl_Empleados.getColumnModel().getColumnCount() > 0) {
            Tbl_Empleados.getColumnModel().getColumn(0).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(0).setPreferredWidth(25);
            Tbl_Empleados.getColumnModel().getColumn(1).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(1).setPreferredWidth(60);
            Tbl_Empleados.getColumnModel().getColumn(2).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(2).setPreferredWidth(60);
            Tbl_Empleados.getColumnModel().getColumn(3).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(3).setPreferredWidth(60);
            Tbl_Empleados.getColumnModel().getColumn(4).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(5).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(6).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(6).setPreferredWidth(60);
            Tbl_Empleados.getColumnModel().getColumn(7).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(8).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(8).setPreferredWidth(60);
            Tbl_Empleados.getColumnModel().getColumn(9).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(9).setPreferredWidth(55);
            Tbl_Empleados.getColumnModel().getColumn(10).setResizable(false);
            Tbl_Empleados.getColumnModel().getColumn(10).setPreferredWidth(60);
        }

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 100));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LogoMicrocosmos.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Txt_Activo.setBackground(new java.awt.Color(60, 63, 65));
        Txt_Activo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Txt_Activo.setMaximumSize(new java.awt.Dimension(800, 230));
        Txt_Activo.setMinimumSize(new java.awt.Dimension(800, 230));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Ingresar Datos");
        jLabel5.setMaximumSize(new java.awt.Dimension(299, 41));
        jLabel5.setPreferredSize(new java.awt.Dimension(299, 41));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID Empleado");
        jLabel2.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel2.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel2.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_IdEmpleados.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre");
        jLabel3.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel3.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_NombreEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_NombreEmpleadoKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Apellido");
        jLabel4.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel4.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel4.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_Apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_ApellidoKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Teléfono");
        jLabel6.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel6.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel6.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_Telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_TelefonoKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Dirección");
        jLabel7.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel7.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel7.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_Direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_DireccionKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("E-mail");
        jLabel8.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel8.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel8.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_Correo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_CorreoKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Tipo Documento");
        jLabel9.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel9.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel9.setPreferredSize(new java.awt.Dimension(120, 20));

        CBox_TipoDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Documento");
        jLabel10.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel10.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel10.setPreferredSize(new java.awt.Dimension(120, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Fecha de Nacimiento");
        jLabel12.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel12.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel12.setPreferredSize(new java.awt.Dimension(120, 20));

        Txt_Documento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_DocumentoKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Género");
        jLabel13.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel13.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel13.setPreferredSize(new java.awt.Dimension(120, 20));

        CBox_Genero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Área Laboral");
        jLabel14.setMaximumSize(new java.awt.Dimension(120, 20));
        jLabel14.setMinimumSize(new java.awt.Dimension(120, 20));
        jLabel14.setPreferredSize(new java.awt.Dimension(120, 20));

        CBox_Area.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Txt_Fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_FechaActionPerformed(evt);
            }
        });
        Txt_Fecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Txt_FechaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout Txt_ActivoLayout = new javax.swing.GroupLayout(Txt_Activo);
        Txt_Activo.setLayout(Txt_ActivoLayout);
        Txt_ActivoLayout.setHorizontalGroup(
            Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Txt_ActivoLayout.createSequentialGroup()
                .addGap(0, 250, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249))
            .addGroup(Txt_ActivoLayout.createSequentialGroup()
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Txt_ActivoLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Txt_ActivoLayout.createSequentialGroup()
                        .addComponent(Txt_Activar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Txt_NombreEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(Txt_IdEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(Txt_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Direccion)
                    .addComponent(Txt_Correo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CBox_TipoDoc, 0, 150, Short.MAX_VALUE)
                    .addComponent(Txt_Documento)
                    .addComponent(CBox_Genero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBox_Area, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Txt_Fecha))
                .addGap(55, 55, 55))
        );
        Txt_ActivoLayout.setVerticalGroup(
            Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Txt_ActivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_IdEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBox_TipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_NombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Documento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBox_Genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CBox_Area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Txt_ActivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Txt_Activar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        jPanel3.setBackground(new java.awt.Color(60, 63, 65));
        jPanel3.setMaximumSize(new java.awt.Dimension(800, 130));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 130));

        Btn_Añadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/anadir.png"))); // NOI18N
        Btn_Añadir.setText(" Añadir");
        Btn_Añadir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Añadir.setFocusPainted(false);
        Btn_Añadir.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Añadir.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Añadir.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AñadirActionPerformed(evt);
            }
        });

        Btn_Editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        Btn_Editar.setText(" Actualizar");
        Btn_Editar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Editar.setFocusPainted(false);
        Btn_Editar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Editar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Editar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_EditarActionPerformed(evt);
            }
        });

        Btn_Activar_Desactivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/estado.png"))); // NOI18N
        Btn_Activar_Desactivar.setText(" Desactivar");
        Btn_Activar_Desactivar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Activar_Desactivar.setFocusPainted(false);
        Btn_Activar_Desactivar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Activar_Desactivar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Activar_Desactivar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Activar_Desactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_Activar_DesactivarActionPerformed(evt);
            }
        });

        Btn_Limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        Btn_Limpiar.setText(" Limpiar");
        Btn_Limpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Limpiar.setFocusPainted(false);
        Btn_Limpiar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Limpiar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Limpiar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LimpiarActionPerformed(evt);
            }
        });

        Btn_Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regresar.png"))); // NOI18N
        Btn_Regresar.setText(" Regresar");
        Btn_Regresar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Regresar.setFocusPainted(false);
        Btn_Regresar.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Acciones");
        jLabel11.setMaximumSize(new java.awt.Dimension(265, 25));
        jLabel11.setMinimumSize(new java.awt.Dimension(265, 25));
        jLabel11.setPreferredSize(new java.awt.Dimension(265, 25));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Btn_Añadir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(Btn_Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Btn_Activar_Desactivar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Btn_Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_Regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Btn_Activar_Desactivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Btn_Editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Btn_Limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Btn_Regresar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Añadir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Txt_Activo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Txt_Activo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Txt_NombreEmpleadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_NombreEmpleadoKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_NombreEmpleado.getText();

        if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z'))
        {
            evt.consume();
        }

        if (Txt_NombreEmpleado.getText().length() == 1)
        {            
            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_NombreEmpleado.setText(Texto);
        }
    }//GEN-LAST:event_Txt_NombreEmpleadoKeyTyped

    private void Btn_RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarActionPerformed
      
        FmrMenú M = new FmrMenú();
        M.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarActionPerformed

    private void Txt_ApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_ApellidoKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_Apellido.getText();

        if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z'))
        {            
            evt.consume();
        }
              
        if (Txt_Apellido.getText().length() >= 20)
        {
            evt.consume();        
        }
    
        if((evt.getKeyChar() == 22))
        {
            Txt_Apellido.setText(Texto.substring(0, 20));                    
        }
          
        if (Txt_Apellido.getText().length() == 1)
        {          
            char mayuscula = Texto.charAt(0);
            Texto = Character.toUpperCase(mayuscula)+ Texto.substring(1,Texto.length());
            Txt_Apellido.setText(Texto);
        }
                
    }//GEN-LAST:event_Txt_ApellidoKeyTyped

    private void Txt_TelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_TelefonoKeyTyped
        
        char c = evt.getKeyChar();
        String Texto = Txt_Telefono.getText();
       
        if(c < '0' || c > '9') 
        {                                
            evt.consume();                    
        }
        
        if(Txt_Telefono.getText().length() == 0 && (c == '0' || c == '4' || c == '5' || c == '6' || c == '1') )
        {
            evt.consume();
            JOptionPane.showMessageDialog(this, "El número de teléfono debe de comenzar con 2, 3, 7, 8 ó 9");        
        }
                
        if (Txt_Telefono.getText().length() >= 8)
        {
            evt.consume();        
        }
        
        if((evt.getKeyChar() == 22))
        {
            Txt_Telefono.setText(Texto.substring(0, 8));                    
        }
    }//GEN-LAST:event_Txt_TelefonoKeyTyped

    private void Txt_DireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_DireccionKeyTyped

        char c = evt.getKeyChar();
        String Texto = Txt_Direccion.getText();
        
        if (Txt_Direccion.getText().length() >= 125)
        {
            evt.consume();                        
        }
        
        if((evt.getKeyChar() == 22))
        {
            Txt_Direccion.setText(Texto.substring(0, 125));                    
        }
    }//GEN-LAST:event_Txt_DireccionKeyTyped

    private void Txt_CorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_CorreoKeyTyped
                
        char c = evt.getKeyChar();
        String Texto = Txt_Correo.getText();
        
        if (Txt_Correo.getText().length() >= 45)
        {
            evt.consume();                                    
        }
        
        if((evt.getKeyChar() == 22))
        {
            Txt_Correo.setText(Texto.substring(0, 45));
        }        
           
    }//GEN-LAST:event_Txt_CorreoKeyTyped
          
    private void Txt_DocumentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_DocumentoKeyTyped
         
        char c = evt.getKeyChar();
        String Texto = Txt_Documento.getText();
        
        if((c < 'A' || c > 'Z') && (c < 'a' || c > 'z')&&(c < '0' || c > '9'))
        {
            evt.consume();                        
        }
        
        if (Txt_Documento.getText().length() >= 20)
        {
            evt.consume();                          
        }
        
        if((evt.getKeyChar() == 22))
        {
            Txt_Documento.setText(Texto.substring(0, 20));                    
        }
        
    }//GEN-LAST:event_Txt_DocumentoKeyTyped

    private void Btn_AñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AñadirActionPerformed
    
        añadirEmpleado();
       
    }//GEN-LAST:event_Btn_AñadirActionPerformed

    private void Btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_EditarActionPerformed
     
     editarEmpleado();   
        
    }//GEN-LAST:event_Btn_EditarActionPerformed

    private void Btn_Activar_DesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_Activar_DesactivarActionPerformed
       
        Activar_Desactivar();
        
    }//GEN-LAST:event_Btn_Activar_DesactivarActionPerformed

    private void Btn_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LimpiarActionPerformed
         
       limpiarEmpleado();
        
    }//GEN-LAST:event_Btn_LimpiarActionPerformed

    private void Tbl_EmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_EmpleadosMouseClicked

        int fila = Tbl_Empleados.getSelectedRow();
        
        if(fila == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un empleado.","¡Aviso!", JOptionPane.WARNING_MESSAGE);                        
        }else{
            Btn_Añadir.setEnabled(false);
            Btn_Editar.setEnabled(true);    
            Btn_Activar_Desactivar.setEnabled(true);
            Btn_Limpiar.setEnabled(true);
            
            String IdE = Tbl_Empleados.getValueAt(fila, 0).toString();
            String Nombre = Tbl_Empleados.getValueAt(fila, 1).toString();
            String Apellido = Tbl_Empleados.getValueAt(fila, 2).toString();
            String Telefono = Tbl_Empleados.getValueAt(fila, 3).toString();
            String Direccion = Tbl_Empleados.getValueAt(fila, 4).toString();
            String Correo = Tbl_Empleados.getValueAt(fila, 5).toString();
            String TipoDocumento = Tbl_Empleados.getValueAt(fila, 6).toString();
            String Documento = Tbl_Empleados.getValueAt(fila, 7).toString();
            Date FechaNac = (Date) Tbl_Empleados.getValueAt(fila, 8);
            String Genero = Tbl_Empleados.getValueAt(fila, 9).toString();
            String Estado = Tbl_Empleados.getValueAt(fila, 10).toString();
            
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String fechaTexto = formatter.format(FechaNac);
            
            Txt_IdEmpleados.setText(IdE);            
            Txt_NombreEmpleado.setText(Nombre);       
            Txt_Apellido.setText(Apellido);           
            Txt_Telefono.setText(Telefono);         
            Txt_Direccion.setText(Direccion);        
            Txt_Correo.setText(Correo);         
            CBox_TipoDoc.setSelectedItem(TipoDocumento);
            Txt_Documento.setText(Documento);
            Txt_Fecha.setText(fechaTexto);         
            CBox_Genero.setSelectedItem(Genero);            
            Txt_Activar.setText(Estado);
            
            if(Estado == "Activado")
            {
                Btn_Activar_Desactivar.setText("Desactivar");
            }else{
                Btn_Activar_Desactivar.setText("Activar");                      
            }      
        }        
    }//GEN-LAST:event_Tbl_EmpleadosMouseClicked

    private void Txt_FechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_FechaKeyTyped
        
        char n = evt.getKeyChar();

        // Permitir solo números y puntos
        if (!Character.isDigit(n) && n != KeyEvent.VK_MINUS)
        {
            evt.consume();            
        }
        
        // Maximo de carácteres permitidos
        if (Txt_Fecha.getText().length() >= 21)
        {
            evt.consume();     
            Toolkit.getDefaultToolkit().beep();
        }
        
    }//GEN-LAST:event_Txt_FechaKeyTyped

    private void Txt_FechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_FechaActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_FechaActionPerformed
            
    
    //METODOS
    private void actualizarEmpleados()
    {
        t = (DefaultTableModel)Tbl_Empleados.getModel();
        t.setRowCount(0);           
        Tbl_Empleados.setModel(t);                                         
        
        List<Empleados> empleados = this.daoEmpleados.findEmpleadosEntities();
        
        String s = null;
        for(Empleados Empleados : empleados)
        {
            if(Empleados.isActivoEmpleado() == true) 
            {
                s = "Activado";                
            }else{
                s = "Desactivado";
            }
            
                t.addRow(
                    new Object[]{
                        Empleados.getIdEmpleados(),
                        Empleados.getNombreEmpleado(),
                        Empleados.getApellidoEmpleado(),
                        Empleados.getTelefonoEmpleado(),                        
                        Empleados.getDireccion(),
                        Empleados.getCorreoEmpleado(),
                        GetNombreTipoDocumento(Empleados.getIdTipoDocumento()),
                        Empleados.getDocumento(),
                        Empleados.getFechaDeNacimiento(),
                        GetNombreSexo(Empleados.getIdSexo()),
                        s                       
                    });                                         
        }
    }
    
    public void listaTipoDocumento()
    {
        CBox_TipoDoc.removeAllItems();
        
        List<TipoDocumento> tipoDocumento = this.daoTipoDocumento.findTipoDocumentoEntities();
  
        CBox_TipoDoc.addItem("Seleccione");
      
        for(TipoDocumento TipoDocumento : tipoDocumento)
        {
            String lista = TipoDocumento.getNombreTipoDocumento();
            if(TipoDocumento.isActivoTipoDocumento() == true)
            {
                CBox_TipoDoc.addItem(lista);                                
            }
        };            
    }
    
    private static String GetNombreTipoDocumento(int id)
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        EntityManager em = emf.createEntityManager();
        String select = "SELECT nombreTipoDocumento FROM TipoDocumento WHERE idTipoDocumento = '"+ id+ "'";
        Query query = em.createQuery(select);
    
        return query.getSingleResult().toString() ;            
    }         
   
    private static int GetIdTipoDocumento(String Nombre)
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        EntityManager em = emf.createEntityManager();
        String select = "SELECT idTipoDocumento FROM TipoDocumento WHERE nombreTipoDocumento = '"+ Nombre+ "'";
        Query query = em.createQuery(select);
    
        return Integer.parseInt(query.getSingleResult().toString());           
    }  
    
    public void listaGenero()
    {
        CBox_Genero.removeAllItems();
  
        List<Sexo> sexo = this.daoSexo.findSexoEntities();
  
        CBox_Genero.addItem("Seleccione");
      
        for(Sexo Sexo : sexo)
        {
            String lista = Sexo.getNombreSexo();
            CBox_Genero.addItem(lista);                                           
        };            
    }      
    
    private static String GetNombreSexo(int id)
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        EntityManager em = emf.createEntityManager();
        String select = "SELECT nombreSexo FROM Sexo WHERE idSexo = '"+ id+ "'";
        Query query = em.createQuery(select);
    
        return query.getSingleResult().toString() ;           
    }   
          
    private static int GetIdSexo(String Nombre)
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        EntityManager em = emf.createEntityManager();
        String select = "SELECT idSexo FROM Sexo WHERE nombreSexo  = '"+ Nombre + "'";
        Query query = em.createQuery(select);
    
        return Integer.parseInt(query.getSingleResult().toString());                  
    } 
    
    public void listaArea()
    {
        CBox_Area.removeAllItems();
        
        List<AreaLaboral> area = this.daoArea.findAreaLaboralEntities();
        
        CBox_Area.addItem("Seleccione");
        
        for(AreaLaboral AreaLaboral : area)
        {
            String lista = AreaLaboral.getNombreAreaLaboral();
            CBox_Area.addItem(lista);
        }            
    }
    
    private void limpiarEmpleado()
    {
        Btn_Añadir.setEnabled(true);
        Btn_Editar.setEnabled(false);
        Btn_Activar_Desactivar.setEnabled(false);
        Txt_IdEmpleados.setText("");
        Txt_NombreEmpleado.setText("");
        Txt_Apellido.setText("");
        Txt_Telefono.setText("");
        Txt_Direccion.setText("");
        Txt_Correo.setText("");
        CBox_TipoDoc.setSelectedIndex(0);                
        Txt_Documento.setText("");
        Txt_Fecha.setText("");
        CBox_Genero.setSelectedIndex(0);        
        CBox_Area.setSelectedIndex(0);                        
    }
    
    private void Activar_Desactivar()
    {
        int fila = Tbl_Empleados.getSelectedRow();        
        String a = Txt_Activar.getText().toString();   
        
        String fecha = Txt_Fecha.getText();
        String fechaEnviar = fecha + " 00:00:00";
                                       
        if(a.equals("Activado"))
        {
            objEmpleados.setIdEmpleados(Integer.parseInt(Txt_IdEmpleados.getText()));
            objEmpleados.setNombreEmpleado(Txt_NombreEmpleado.getText());
            objEmpleados.setApellidoEmpleado(Txt_Apellido.getText());
            objEmpleados.setTelefonoEmpleado(Integer.parseInt(Txt_Telefono.getText()));
            objEmpleados.setDireccion(Txt_Direccion.getText());
            objEmpleados.setCorreoEmpleado(Txt_Correo.getText());
            objEmpleados.setIdTipoDocumento(GetIdTipoDocumento(String.valueOf(CBox_TipoDoc.getSelectedItem())));
            objEmpleados.setDocumento(Txt_Documento.getText());                                    
            objEmpleados.setFechaDeNacimiento(Timestamp.valueOf(fechaEnviar));
            objEmpleados.setIdSexo(GetIdSexo(String.valueOf(CBox_Genero.getSelectedItem())));            
            objEmpleados.setActivoEmpleado(false);
                
        try{
            daoEmpleados.edit(objEmpleados);
            actualizarEmpleados();
            Btn_Activar_Desactivar.setText("Activar");
            JOptionPane.showMessageDialog(this, "Se desactivó correctamente.");
        }catch (Exception ex){
            Logger.getLogger(FmrClientes.class.getName()).log(Level.SEVERE, null, ex);
        }                
        limpiarEmpleado();
        Btn_Limpiar.setEnabled(false);
        Btn_Añadir.setEnabled(true);        
        }else{                   
            objEmpleados.setIdEmpleados(Integer.parseInt(Txt_IdEmpleados.getText()));
            objEmpleados.setNombreEmpleado(Txt_NombreEmpleado.getText());
            objEmpleados.setApellidoEmpleado(Txt_Apellido.getText());
            objEmpleados.setTelefonoEmpleado(Integer.parseInt(Txt_Telefono.getText()));
            objEmpleados.setDireccion(Txt_Direccion.getText());
            objEmpleados.setCorreoEmpleado(Txt_Correo.getText());
            objEmpleados.setIdTipoDocumento(GetIdTipoDocumento(String.valueOf(CBox_TipoDoc.getSelectedItem())));
            objEmpleados.setDocumento(Txt_Documento.getText());
            objEmpleados.setFechaDeNacimiento(Timestamp.valueOf(fechaEnviar));
            objEmpleados.setIdSexo(GetIdSexo(String.valueOf(CBox_Genero.getSelectedItem())));            
            objEmpleados.setActivoEmpleado(true);
        
        try{
            daoEmpleados.edit(objEmpleados);
            actualizarEmpleados();
            Btn_Activar_Desactivar.setText("Desactivar");
            JOptionPane.showMessageDialog(this, "Se activó correctamente.");
        }catch (Exception ex){
            Logger.getLogger(FmrClientes.class.getName()).log(Level.SEVERE, null, ex);
        }        
        limpiarEmpleado();
        Btn_Limpiar.setEnabled(false);
        Btn_Añadir.setEnabled(true);        
        }        
    }
    
    private void añadirEmpleado()
    {                   
        if(Txt_NombreEmpleado.getText().length() < 3)
        {
            JOptionPane.showMessageDialog(null, "El nombre tiene que contener al menos 3 letras.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(ValidacionDeRepetidos(Txt_NombreEmpleado.getText())){
            JOptionPane.showMessageDialog(null, "El elemento ya existe.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                            
        }else if(ValidacionTresLetras(Txt_NombreEmpleado.getText())){
            JOptionPane.showMessageDialog(null, "El nombre no puede contener letras consecutivas repetidas.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                                        
        }else if(Txt_Apellido.getText().length() < 3){
            JOptionPane.showMessageDialog(null, "El apellido debe contener al menos 3 letras.","¡Error!", JOptionPane.ERROR_MESSAGE);                        
        }else if(ValidacionTresLetras(Txt_Apellido.getText())){
            JOptionPane.showMessageDialog(null, "El apellido no puede contener letras consecutivas repetidas.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                                                    
        }else if(Txt_Telefono.getText().length() < 8){
            JOptionPane.showMessageDialog(null, "El teléfono debe contener 8 carácteres.","¡Error!", JOptionPane.ERROR_MESSAGE);                        
        }else if(Txt_Direccion.getText().length() < 8){
            JOptionPane.showMessageDialog(null, "Debe ingresar una dirección con al menos 8 carácteres.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                            
        }else if(ValidacionTresLetras(Txt_Direccion.getText())){
            JOptionPane.showMessageDialog(null, "La dirección no puede contener letras consecutivas repetidas.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                                                                
        }else if(ValidacionMail(Txt_Correo.getText())== false){
            JOptionPane.showMessageDialog(null, "Formato de Email inválido.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(String.valueOf(CBox_TipoDoc.getSelectedItem()) == "Seleccione"){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de documento.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if((String.valueOf(CBox_TipoDoc.getSelectedItem()).equalsIgnoreCase("dni") && ValidacionDNI(Txt_Documento.getText()) == false ) || (String.valueOf(CBox_TipoDoc.getSelectedItem()).equalsIgnoreCase("identidad") && ValidacionDNI(Txt_Documento.getText()) == false ) || (String.valueOf(CBox_TipoDoc.getSelectedItem()).equalsIgnoreCase("rtn") && ValidacionRTN(Txt_Documento.getText())== false)){
            JOptionPane.showMessageDialog(null, "Formato de documento inválido.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(String.valueOf(CBox_Genero.getSelectedItem()) == "Seleccione"){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un género.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(String.valueOf(CBox_Area.getSelectedItem()) == "Seleccione"){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un área laboral.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else{
            
            String fechaTxt = Txt_Fecha.getText();
            String fecha = fechaTxt + " 00:00:00";                       
            
            objEmpleados.setNombreEmpleado(Txt_NombreEmpleado.getText());
            objEmpleados.setApellidoEmpleado(Txt_Apellido.getText());
            objEmpleados.setTelefonoEmpleado(Integer.parseInt(Txt_Telefono.getText()));
            objEmpleados.setDireccion(Txt_Direccion.getText());
            objEmpleados.setCorreoEmpleado(Txt_Correo.getText());
            objEmpleados.setIdTipoDocumento(GetIdTipoDocumento(String.valueOf(CBox_TipoDoc.getSelectedItem())));
            objEmpleados.setDocumento(Txt_Documento.getText());
            objEmpleados.setFechaDeNacimiento(Timestamp.valueOf(fecha));                             
            objEmpleados.setIdSexo(GetIdSexo(String.valueOf(CBox_Genero.getSelectedItem())));
            objEmpleados.setActivoEmpleado(true);
            
            try{
                daoEmpleados.edit(objEmpleados);
                actualizarEmpleados();
                limpiarEmpleado();
                JOptionPane.showMessageDialog(this, "Datos guardados correctamente.");
            }catch(Exception ex){
                Logger.getLogger(FmrEmpleados.class.getName()).log(Level.SEVERE, null, ex);                
            }
        }
    }
    
    private void editarEmpleado()
    {                
        if(Txt_NombreEmpleado.getText().length() < 3)
        {
            JOptionPane.showMessageDialog(null, "El nombre tiene que contener al menos 3 letras.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(ValidacionTresLetras(Txt_NombreEmpleado.getText())){
            JOptionPane.showMessageDialog(null, "El nombre no puede contener letras consecutivas repetidas.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                                        
        }else if(Txt_Apellido.getText().length() < 3){
            JOptionPane.showMessageDialog(null, "El apellido debe contener al menos 3 letras.","¡Error!", JOptionPane.ERROR_MESSAGE);                        
        }else if(ValidacionTresLetras(Txt_Apellido.getText())){
            JOptionPane.showMessageDialog(null, "El apellido no puede contener letras consecutivas repetidas.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                                                    
        }else if(Txt_Telefono.getText().length() < 8){
            JOptionPane.showMessageDialog(null, "El teléfono debe contener 8 carácteres.","¡Error!", JOptionPane.ERROR_MESSAGE);                        
        }else if(Txt_Direccion.getText().length() < 8){
            JOptionPane.showMessageDialog(null, "Debe ingresar una dirección con al menos 8 carácteres.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                            
        }else if(ValidacionTresLetras(Txt_Direccion.getText())){
            JOptionPane.showMessageDialog(null, "La dirección no puede contener letras consecutivas repetidas.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                                                                
        }else if(ValidacionMail(Txt_Correo.getText())== false){
            JOptionPane.showMessageDialog(null, "Formato de Email inválido.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(String.valueOf(CBox_TipoDoc.getSelectedItem()) == "Seleccione"){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un tipo de documento.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if((String.valueOf(CBox_TipoDoc.getSelectedItem()).equalsIgnoreCase("dni") && ValidacionDNI(Txt_Documento.getText()) == false ) || (String.valueOf(CBox_TipoDoc.getSelectedItem()).equalsIgnoreCase("identidad") && ValidacionDNI(Txt_Documento.getText()) == false ) || (String.valueOf(CBox_TipoDoc.getSelectedItem()).equalsIgnoreCase("rtn") && ValidacionRTN(Txt_Documento.getText())== false)){
            JOptionPane.showMessageDialog(null, "Formato de documento inválido.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(String.valueOf(CBox_Genero.getSelectedItem()) == "Seleccione"){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un género.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else if(String.valueOf(CBox_Area.getSelectedItem()) == "Seleccione"){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un área laboral.","¡Error!", JOptionPane.ERROR_MESSAGE);                                                
        }else{
            
            String fechaTxt = Txt_Fecha.getText();
            String fecha = fechaTxt + " 00:00:00";                       
            
            objEmpleados.setIdEmpleados(Integer.parseInt(Txt_IdEmpleados.getText()));            
            objEmpleados.setNombreEmpleado(Txt_NombreEmpleado.getText());
            objEmpleados.setApellidoEmpleado(Txt_Apellido.getText());
            objEmpleados.setTelefonoEmpleado(Integer.parseInt(Txt_Telefono.getText()));
            objEmpleados.setDireccion(Txt_Direccion.getText());
            objEmpleados.setCorreoEmpleado(Txt_Correo.getText());
            objEmpleados.setIdTipoDocumento(GetIdTipoDocumento(String.valueOf(CBox_TipoDoc.getSelectedItem())));
            objEmpleados.setDocumento(Txt_Documento.getText());
            objEmpleados.setFechaDeNacimiento(Timestamp.valueOf(fecha));                             
            objEmpleados.setIdSexo(GetIdSexo(String.valueOf(CBox_Genero.getSelectedItem())));
            
            String estado = Txt_Activar.toString();                 
            boolean status = true;
            
            if(estado.equals("Activado"))
            {
                status = true;                       
            }else{
                status = false;                     
            }
            objEmpleados.setActivoEmpleado(status);            
                                    
            try{
                daoEmpleados.edit(objEmpleados);
                actualizarEmpleados();
                JOptionPane.showMessageDialog(null, "Se actualizó correctamente.");
            }catch(Exception ex){
                Logger.getLogger(FmrEmpleados.class.getName()).log(Level.SEVERE, null, ex);                
            }            
        }        
    }
      
    public static boolean ValidacionDeRepetidos(String Nombre)
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        EntityManager em = emf.createEntityManager();
      
        String select = "SELECT idEmpleados FROM Empleados WHERE nombreEmpleado = '"+Nombre+ "'";
   
        Query query = em.createQuery(select);
      
        if(query.getResultList().size() == 0)
        {
            return false;
             
        }else{
            return true;                
        }             
    }
    
    public static boolean ValidacionMail(String Nombre)
    {                
        return Nombre.matches("[^@]+@[^@]+\\.[a-zA-Z]{2,}");               
    }
    
    public static boolean ValidacionDNI(String DNI)
    {
        return DNI.matches("^[0-1]{1}[0-9]{12}$");                
    }
    
    public static boolean ValidacionRTN(String RTN)
    {                
        return RTN.matches("^[0-1]{1}[0-9]{13}$");                
    }
    
    private static boolean ValidacionTresLetras(String Nombre)
    {
        if(Nombre.length() >= 2)
        {
            String Letra1 = Nombre.substring(0, 1);
            String Letra2 = Nombre.substring(1, 2);
            String Letra3 = Nombre.substring(2, 3);        
        
            if(Letra1.equalsIgnoreCase(Letra2) && Letra2.equalsIgnoreCase(Letra3))
            {
                return true;         
            }else{
                return false;              
            }
        }else{
            return false;        
        }              
    }
    
    /*public static boolean validacionFecha(String text) 
    {
        if (text == null || !text.matches("\\d{4}-[01]\\d-[0-3]\\d"))
        {
            return false;
        }
        
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        df.setLenient(false);
        
        try{
            df.parse(text);
            return true;
        }catch(ParseException ex){
            return false;
        }
    }*/
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmrEmpleados().setVisible(true);
            }
        });
    }                               
         
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Activar_Desactivar;
    private javax.swing.JButton Btn_Añadir;
    private javax.swing.JButton Btn_Editar;
    private javax.swing.JButton Btn_Limpiar;
    private javax.swing.JButton Btn_Regresar;
    private javax.swing.JComboBox<String> CBox_Area;
    private javax.swing.JComboBox<String> CBox_Genero;
    private javax.swing.JComboBox<String> CBox_TipoDoc;
    private javax.swing.JTable Tbl_Empleados;
    private javax.swing.JTextField Txt_Activar;
    private javax.swing.JPanel Txt_Activo;
    private javax.swing.JTextField Txt_Apellido;
    private javax.swing.JTextField Txt_Correo;
    private javax.swing.JTextField Txt_Direccion;
    private javax.swing.JTextField Txt_Documento;
    private javax.swing.JTextField Txt_Fecha;
    private javax.swing.JTextField Txt_IdEmpleados;
    private javax.swing.JTextField Txt_NombreEmpleado;
    private javax.swing.JTextField Txt_Telefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
