/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.screens;

import com.clases.Articulo;
import com.clases.Clientes;
import com.clases.Compra;
import com.clases.DetalleVenta;
import com.clases.Empleados;
import com.clases.Estado;
import com.clases.FacturaDataSource;
import com.clases.Parametros;
import com.clases.SingletonUser;
import com.clases.TipoDePago;
import com.clases.Usuarios;
import com.clases.Venta;
import com.clases.facturasanuladas;
import com.dao.ArticuloJpaController;
import com.dao.ClientesJpaController;
import com.dao.CompraJpaController;
import com.dao.EmpleadosJpaController;
import com.dao.EstadoJpaController;
import com.dao.ParametrosJpaController;
import com.dao.TipoDePagoJpaController;
import com.dao.VentaJpaController;
import com.dao.facturasanuladasJpaController;
import java.awt.Image;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ariel
 */
public class FmrHistorialFacturas extends javax.swing.JFrame {
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        
    VentaJpaController daoVenta = new VentaJpaController();
    EstadoJpaController daoEstado = new EstadoJpaController();                 
    CompraJpaController daoCompras = new CompraJpaController();
    ArticuloJpaController daoArticulo = new ArticuloJpaController();  
    ClientesJpaController daoClientes = new ClientesJpaController();   
    EmpleadosJpaController daoEmpleados = new EmpleadosJpaController();
    TipoDePagoJpaController daoTipoPago = new TipoDePagoJpaController();          
    ParametrosJpaController daoParametros = new ParametrosJpaController();    
    facturasanuladasJpaController daoAnuladas = new facturasanuladasJpaController();        
        
    Venta objVenta = new Venta();
    Compra objCompra = new Compra();
    Estado objEstadoo = new Estado();    
    Clientes objClientes = new Clientes(); 
    Articulo objArticulo = new Articulo();
    Empleados objEmpleados = new Empleados();    
    TipoDePago objTipoPago = new TipoDePago();        
    Parametros objParametros = new Parametros();  
    facturasanuladas objAnuladas = new facturasanuladas();
        
        
    FacturaDataSource dataSource;    
    DefaultTableModel t;
    
    public static String idVenta;
    public static String idCompra;    
    public static String idAnulada;
    
    private Usuarios usuarios = new Usuarios(); 
    private SingletonUser singleton = SingletonUser.getUsuario(usuarios);

    /**
     * Creates new form FmrHistorialFacturas
     */
    public FmrHistorialFacturas() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //ÍCONO
        Image icon = new ImageIcon(getClass().getResource("/imagenes/IconoMicrocosmos.png")).getImage();
        setIconImage(icon);
        
        //INICIALIZAR PANTALLA
        Btn_Anular.setEnabled(false);
        Btn_DetallesVentas.setEnabled(false);
        actualizarVentas(); 
        actualizarCompras();
        actualizarAnuladas();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DetallesCompras = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        Btn_RegresarC = new javax.swing.JButton();
        Btn_DetallesCompras = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_DetallesVentas = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        Btn_RegresarV = new javax.swing.JButton();
        Btn_DetallesVentas = new javax.swing.JButton();
        Btn_Anular = new javax.swing.JButton();
        Btn_ImprimirFact = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_DetallesAnuladas = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        Btn_RegresarA = new javax.swing.JButton();
        Btn_DetallesAnuladas = new javax.swing.JButton();
        Btn_ImprimirFact1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Historial de Facturas - Microcosmos");
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jPanel1.setBackground(new java.awt.Color(49, 49, 49));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/LogoMicrocosmos.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTable_DetallesCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Factura", "Fecha", "Valor", "Estado", "Comentarios"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_DetallesCompras.getTableHeader().setReorderingAllowed(false);
        jTable_DetallesCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_DetallesComprasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_DetallesCompras);
        if (jTable_DetallesCompras.getColumnModel().getColumnCount() > 0) {
            jTable_DetallesCompras.getColumnModel().getColumn(0).setResizable(false);
            jTable_DetallesCompras.getColumnModel().getColumn(1).setResizable(false);
            jTable_DetallesCompras.getColumnModel().getColumn(2).setResizable(false);
            jTable_DetallesCompras.getColumnModel().getColumn(3).setResizable(false);
            jTable_DetallesCompras.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel4.setBackground(new java.awt.Color(60, 63, 65));

        Btn_RegresarC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regresar.png"))); // NOI18N
        Btn_RegresarC.setText(" Regresar");
        Btn_RegresarC.setToolTipText("Regresa a la pantalla de Menú Principal.");
        Btn_RegresarC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_RegresarC.setFocusPainted(false);
        Btn_RegresarC.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_RegresarC.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_RegresarC.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_RegresarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarCActionPerformed(evt);
            }
        });

        Btn_DetallesCompras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/DetalleFact.png"))); // NOI18N
        Btn_DetallesCompras.setText(" Ver Detalles");
        Btn_DetallesCompras.setToolTipText("Mira los detalles de la factura seleccionada.");
        Btn_DetallesCompras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_DetallesCompras.setFocusPainted(false);
        Btn_DetallesCompras.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_DetallesCompras.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_DetallesCompras.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_DetallesCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_DetallesComprasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(235, Short.MAX_VALUE)
                .addComponent(Btn_DetallesCompras, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(Btn_RegresarC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(235, 235, 235))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_RegresarC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_DetallesCompras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        Btn_RegresarC.getAccessibleContext().setAccessibleDescription("Regresa a la pantalla de configuración.");
        Btn_DetallesCompras.getAccessibleContext().setAccessibleDescription("Ver factura completa.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Compras", jPanel2);

        jTable_DetallesVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Factura", "Fecha", "Valor", "TipoPago", "Monto Tarjeta", "Tarjeta", "Id Empleado", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_DetallesVentas.getTableHeader().setReorderingAllowed(false);
        jTable_DetallesVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_DetallesVentasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_DetallesVentas);
        if (jTable_DetallesVentas.getColumnModel().getColumnCount() > 0) {
            jTable_DetallesVentas.getColumnModel().getColumn(0).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(1).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(2).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(3).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(4).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(5).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(6).setResizable(false);
            jTable_DetallesVentas.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel5.setBackground(new java.awt.Color(60, 63, 65));

        Btn_RegresarV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regresar.png"))); // NOI18N
        Btn_RegresarV.setText(" Regresar");
        Btn_RegresarV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_RegresarV.setFocusPainted(false);
        Btn_RegresarV.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_RegresarV.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_RegresarV.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_RegresarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarVActionPerformed(evt);
            }
        });

        Btn_DetallesVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/DetalleFact.png"))); // NOI18N
        Btn_DetallesVentas.setText(" Ver Detalles");
        Btn_DetallesVentas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_DetallesVentas.setFocusPainted(false);
        Btn_DetallesVentas.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_DetallesVentas.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_DetallesVentas.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_DetallesVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_DetallesVentasActionPerformed(evt);
            }
        });

        Btn_Anular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/rechazado.png"))); // NOI18N
        Btn_Anular.setText(" Anular");
        Btn_Anular.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_Anular.setFocusPainted(false);
        Btn_Anular.setMaximumSize(new java.awt.Dimension(110, 50));
        Btn_Anular.setMinimumSize(new java.awt.Dimension(110, 50));
        Btn_Anular.setPreferredSize(new java.awt.Dimension(110, 50));
        Btn_Anular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AnularActionPerformed(evt);
            }
        });

        Btn_ImprimirFact.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir.png"))); // NOI18N
        Btn_ImprimirFact.setMnemonic(' ');
        Btn_ImprimirFact.setText("  Imprimir");
        Btn_ImprimirFact.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_ImprimirFact.setFocusPainted(false);
        Btn_ImprimirFact.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_ImprimirFact.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_ImprimirFact.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_ImprimirFact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ImprimirFactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(Btn_DetallesVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(Btn_ImprimirFact, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(Btn_Anular, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(Btn_RegresarV, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_RegresarV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_DetallesVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_Anular, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_ImprimirFact, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ventas", jPanel3);

        jTable_DetallesAnuladas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Factura", "Fecha Anulación", "ID Empleado", "Comentarios"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_DetallesAnuladas.getTableHeader().setReorderingAllowed(false);
        jTable_DetallesAnuladas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_DetallesAnuladasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_DetallesAnuladas);
        if (jTable_DetallesAnuladas.getColumnModel().getColumnCount() > 0) {
            jTable_DetallesAnuladas.getColumnModel().getColumn(0).setResizable(false);
            jTable_DetallesAnuladas.getColumnModel().getColumn(1).setResizable(false);
            jTable_DetallesAnuladas.getColumnModel().getColumn(2).setResizable(false);
            jTable_DetallesAnuladas.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel7.setBackground(new java.awt.Color(60, 63, 65));

        Btn_RegresarA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/regresar.png"))); // NOI18N
        Btn_RegresarA.setText(" Regresar");
        Btn_RegresarA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_RegresarA.setFocusPainted(false);
        Btn_RegresarA.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_RegresarA.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_RegresarA.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_RegresarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_RegresarAActionPerformed(evt);
            }
        });

        Btn_DetallesAnuladas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/DetalleFact.png"))); // NOI18N
        Btn_DetallesAnuladas.setText(" Ver Detalles");
        Btn_DetallesAnuladas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_DetallesAnuladas.setFocusPainted(false);
        Btn_DetallesAnuladas.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_DetallesAnuladas.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_DetallesAnuladas.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_DetallesAnuladas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_DetallesAnuladasActionPerformed(evt);
            }
        });

        Btn_ImprimirFact1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/imprimir.png"))); // NOI18N
        Btn_ImprimirFact1.setMnemonic(' ');
        Btn_ImprimirFact1.setText("  Imprimir");
        Btn_ImprimirFact1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 255)));
        Btn_ImprimirFact1.setFocusPainted(false);
        Btn_ImprimirFact1.setMaximumSize(new java.awt.Dimension(120, 50));
        Btn_ImprimirFact1.setMinimumSize(new java.awt.Dimension(120, 50));
        Btn_ImprimirFact1.setPreferredSize(new java.awt.Dimension(120, 50));
        Btn_ImprimirFact1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ImprimirFact1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(170, Short.MAX_VALUE)
                .addComponent(Btn_DetallesAnuladas, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(Btn_ImprimirFact1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(Btn_RegresarA, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_RegresarA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_DetallesAnuladas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btn_ImprimirFact1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Anuladas", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //COMPRAS
    private void jTable_DetallesComprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_DetallesComprasMouseClicked
        
        int fila =  jTable_DetallesCompras.getSelectedRow();
        
        if(fila == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una factura.","Error!", JOptionPane.ERROR_MESSAGE);
        }else{
            Btn_DetallesCompras.setEnabled(true);     
            //Btn_Anular.setEnabled(true);
            
            String valor = jTable_DetallesCompras.getValueAt(fila, 0).toString();
            
            idCompra = valor;                      
        }
        
    }//GEN-LAST:event_jTable_DetallesComprasMouseClicked

    private void Btn_DetallesComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_DetallesComprasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Btn_DetallesComprasActionPerformed

    private void Btn_RegresarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarCActionPerformed
        
        FmrConfiguraciones conf = new FmrConfiguraciones();
        conf.setVisible(true);
        this.dispose();        
        
    }//GEN-LAST:event_Btn_RegresarCActionPerformed

    
    //VENTAS    
    private void jTable_DetallesVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_DetallesVentasMouseClicked
        
        int fila =  jTable_DetallesVentas.getSelectedRow();
        
        if(fila == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una factura.","Error!", JOptionPane.ERROR_MESSAGE);
        }else{
            Btn_DetallesVentas.setEnabled(true);     
            Btn_Anular.setEnabled(true);
            
            String valor = jTable_DetallesVentas.getValueAt(fila, 0).toString();
            
            idVenta = valor;            
            
        }
        
    }//GEN-LAST:event_jTable_DetallesVentasMouseClicked

    private void Btn_DetallesVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_DetallesVentasActionPerformed
                                        
        FmrDetalleVenta dVenta = new FmrDetalleVenta();
        dVenta.setVisible(true);        
        
    }//GEN-LAST:event_Btn_DetallesVentasActionPerformed

    private void Btn_RegresarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarVActionPerformed
        
        FmrConfiguraciones conf = new FmrConfiguraciones();
        conf.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarVActionPerformed
    
    //ANULADAS    
    private void jTable_DetallesAnuladasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_DetallesAnuladasMouseClicked
        
        int fila =  jTable_DetallesAnuladas.getSelectedRow();
        
        if(fila == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una factura.","Error!", JOptionPane.ERROR_MESSAGE);
        }else{
            Btn_DetallesAnuladas.setEnabled(true);                 
            
            String valor = jTable_DetallesAnuladas.getValueAt(fila, 0).toString();
            
            idAnulada = valor;
            
        }
        
    }//GEN-LAST:event_jTable_DetallesAnuladasMouseClicked

    private void Btn_DetallesAnuladasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_DetallesAnuladasActionPerformed
        
         FmrDetalleAnuladas dAnulada = new FmrDetalleAnuladas();
         dAnulada.setVisible(true); 
        
    }//GEN-LAST:event_Btn_DetallesAnuladasActionPerformed

    private void Btn_RegresarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_RegresarAActionPerformed
        
        FmrConfiguraciones conf = new FmrConfiguraciones();
        conf.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_Btn_RegresarAActionPerformed

    //VENTAS
    private void Btn_AnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AnularActionPerformed
        
        int fila = jTable_DetallesVentas.getSelectedRow();
        
        if(fila == -1)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una factura.","¡Error!", JOptionPane.ERROR_MESSAGE);                        
        }else{
            anularFactura();
            actualizarVentas(); 
            actualizarAnuladas();
        }
        
    }//GEN-LAST:event_Btn_AnularActionPerformed

    private void Btn_ImprimirFactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ImprimirFactActionPerformed

        imprimirFactura();

    }//GEN-LAST:event_Btn_ImprimirFactActionPerformed

    private void Btn_ImprimirFact1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ImprimirFact1ActionPerformed
        
        imprimirFactura();
        
    }//GEN-LAST:event_Btn_ImprimirFact1ActionPerformed
    
                               
    //METODOS
    private void actualizarVentas()
    {    
        t = (DefaultTableModel)jTable_DetallesVentas.getModel();
        t.setRowCount(0);           
        jTable_DetallesVentas.setModel(t); 
        
        List<Venta> venta = this.daoVenta.findVentaEntities();
        
        String s = null;
        for(Venta Venta : venta)
        {    
            if(Venta.getIdEstado() == 1)
            {
                s = "Facturada";
                
                t.addRow(
                        new Object[]{
                            Venta.getIdVenta(),
                            Venta.getFechaVenta(),
                            Venta.getTotal(),
                            GetNombreTipoPago(Venta.getIdTipoDePago()),
                            Venta.getMontoTarjeta(),
                            Venta.getTarjeta(),                            
                            Venta.getIdEmpleados(),
                            s,
                            s                       
                        });            
            }
        }
    }
    
    private void actualizarAnuladas()
    {    
        t = (DefaultTableModel)jTable_DetallesAnuladas.getModel();
        t.setRowCount(0);           
        jTable_DetallesAnuladas.setModel(t); 
        
        List<facturasanuladas> anuladas = this.daoAnuladas.findfacturasanuladasEntities();
        
        String s = null;
        for(facturasanuladas facturasanuladas : anuladas)
        {                                                 
            t.addRow(
                    new Object[]{
                        facturasanuladas.getIdVenta(),
                        facturasanuladas.getFechaAnulacion(),
                        facturasanuladas.getIdEmpleados(),
                        facturasanuladas.getMotivo(),
                        s                       
                    });            
        }
    }
    
    private void actualizarCompras()
    {
        t = (DefaultTableModel)jTable_DetallesCompras.getModel();
        t.setRowCount(0); 
        jTable_DetallesCompras.setModel(t);
        
        List<Compra> compras = this.daoCompras.findCompraEntities();
        
        String s = null;
        for(Compra Compra : compras)
        {
            t.addRow(
                    new Object[]{
                        Compra.getIdCompra(),
                        Compra.getFechaRecibido(),
                        Compra.getTotalCompra(),
                        Compra.getIdEstado(),                        
                    });
        }
    }
    
    private void anularFactura()
    {
        int opcion = JOptionPane.showConfirmDialog(null, "¿Esta seguro que desea anular la factura seleccionada?", "Alerta!", JOptionPane.YES_NO_OPTION);                        
        
        if(opcion == 0)
        {
            String motivo = JOptionPane.showInputDialog(null, "Escriba el motivo para anular esta factura.", "¡Anular factura!", JOptionPane.QUESTION_MESSAGE);            
            
            int filaSel = jTable_DetallesVentas.getSelectedRow();            
            
            //OBTENER ID DE VENTA
            String id = jTable_DetallesVentas.getValueAt(filaSel, 0).toString();
            
            //OBTENER FECHA DE ANULACION
            Date fecha = new Date(Calendar.getInstance().getTimeInMillis());
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String fechaTexto = formatter.format(fecha);  
            String fechaAn = fechaTexto + " 00:00:00";
            
            
            //OBTENER ID Y NOMBRE DE EMPLEADO Y MOSTRARLO
            int IdE = singleton.getCuenta().getIdEmpleados();             
            
            //GUARDAR DATOS EN LA TABLA FACTURAS ANULADAS
            objAnuladas.setIdVenta(Integer.parseInt(id));
            objAnuladas.setIdEmpleados(IdE);
            objAnuladas.setFechaAnulacion(Timestamp.valueOf(fechaAn));
            objAnuladas.setMotivo(motivo);           
                                                                                             
            try{
                daoAnuladas.edit(objAnuladas);                
                JOptionPane.showMessageDialog(null, "La factura ha sido anulada.");
                actualizarVentas();
            }catch(Exception ex){
                Logger.getLogger(FmrHistorialFacturas.class.getName()).log(Level.SEVERE, null, ex);                                                    
            }            
            
            //OBTENER DATOS DE FACTURA NORMAL PARA CAMBIAR ESTADO DE LA FACTURA
            int ID = (int) jTable_DetallesVentas.getValueAt(filaSel, 0);            
            
            //ID VENTA
            int idventaa = daoVenta.findVenta(ID).getIdVenta();                                              
            //String idV = String.valueOf(idventaa);    
            
            //FECHA
            Date fechaV = daoVenta.findVenta(ID).getFechaVenta();
            String dateV = String.valueOf(fechaV);
                        
            //IMPUESTO
            double imp = daoVenta.findVenta(ID).getImpuesto();            
            //String tax = String.valueOf(imp);
            
            //SUBTOTAL
            double subT = daoVenta.findVenta(ID).getSubTotal();            
            //String sub = String.valueOf(subT);
            
            //TOTAL
            double total = daoVenta.findVenta(ID).getTotal();            
            //String tot = String.valueOf(total);
            
            //ID PARAMETORS
            int param = daoVenta.findVenta(ID).getIdParametros();            
            //String par = String.valueOf(param);
            
            //ID EMPLEADOS
            int emp = daoVenta.findVenta(ID).getIdEmpleados();            
            //String emplo = String.valueOf(emp);
            
            //TIPO PAGO
            int tp = daoVenta.findVenta(ID).getIdTipoDePago();            
            //String pago = String.valueOf(tp);
            
            //ID CLIENTE
            int cliente = daoVenta.findVenta(ID).getIdCliente();            
            //String cli = String.valueOf(cliente);            
            
            //ID ESTADO
            int est = daoVenta.findVenta(ID).getIdEstado();            
            //String status = String.valueOf(est);                                              
                        
            objVenta.setIdVenta(idventaa);
            objVenta.setFechaVenta(Timestamp.valueOf(dateV));
            objVenta.setImpuesto(imp);
            objVenta.setSubTotal(subT);
            objVenta.setTotal(total);
            objVenta.setIdParametros(param);
            objVenta.setIdEmpleados(emp);
            objVenta.setIdTipoDePago(tp);
            objVenta.setIdCliente(cliente);
            objVenta.setIdEstado(2);                       
            
            try{
                daoVenta.edit(objVenta);                
                actualizarVentas();
            }catch(Exception ex){
                Logger.getLogger(FmrHistorialFacturas.class.getName()).log(Level.SEVERE, null, ex);                                                                    
            }
        }else{
            actualizarVentas();
        }
    }
    
    private static String GetNombreTipoPago(int id)
    {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("DB");
        EntityManager em = emf.createEntityManager();
        String select = "SELECT nombreTipoDePago FROM TipoDePago WHERE idTipoDePago = '"+ id+ "'";
        Query query = em.createQuery(select);
    
        return query.getSingleResult().toString() ;            
    }
    
    public void imprimirFactura()
    {         
        Date date = daoVenta.findVenta(Integer.parseInt(idVenta)).getFechaVenta();        
        
        List<Venta> listaFacturasBD = daoVenta.findVentaEntities();
        java.text.SimpleDateFormat formatoFecha = new java.text.SimpleDateFormat("dd/MM/yyyy");
        Venta facturaActual = listaFacturasBD.get(listaFacturasBD.size()-1);

        //DETALLES PRODUCTO
        EntityManager em = daoVenta.getEntityManager();
        
        String hqlDetalleProd = "FROM DetalleVenta E WHERE E.idVenta = :idFactura";
        Query queryDetalleProd = em.createQuery(hqlDetalleProd);
        queryDetalleProd.setParameter("idFactura",facturaActual.getIdVenta());
        List<DetalleVenta> detallesProd = queryDetalleProd.getResultList();                        
        
        Object[][] arrayDetallesFactura;
        arrayDetallesFactura = new Object[detallesProd.size()][3];      
    
        for(int i = 0; i < detallesProd.size(); i++)
        {        
            for(int j = 0; j < 3 ; j++)
            {            
                switch(j)
                {                
                    case 0: //ARTICULO
                        arrayDetallesFactura[i][0] = daoArticulo.findArticulo(detallesProd.get(i).getIdArticulo()).getNombreArticulo();                        
                    break;
                    
                    case 1: //PRECIO
                        arrayDetallesFactura[i][1] = daoArticulo.findArticulo(detallesProd.get(i).getIdArticulo()).getPrecioArticulo();                        
                    break;
                    
                    case 2: //CANTIDAD
                        arrayDetallesFactura[i][2] = detallesProd.get(i).getCantidad();
                    break;                                                               
                }            
            }
        }
        
        HashMap param = new HashMap();        
        param.put("Factura", "000-001-003-" + String.format("%0" + 8 + "d",facturaActual.getIdVenta()));
        param.put("Cliente", daoClientes.findClientes(facturaActual.getIdCliente()).getNombreCliente());                
        param.put("Fecha", formatoFecha.format(date));                        
        param.put("Empleado",daoEmpleados.findEmpleados(facturaActual.getIdEmpleados()).getNombreEmpleado());                        
        param.put("CAI", daoParametros.findParametros(facturaActual.getIdParametros()).getCai());
        param.put("Impuesto",0.15);
        param.put("SubTotal", daoVenta.findVenta(facturaActual.getIdVenta()).getSubTotal());        
        param.put("Total", daoVenta.findVenta(facturaActual.getIdVenta()).getTotal());         
        
        try {
            JasperReport reporteFactura = JasperCompileManager.compileReport("src/main/resources/Reports/FacturaVenta.jrxml");
            JasperPrint print = JasperFillManager.fillReport(
                    reporteFactura,
                    param, 
                    dataSource.getDataSource(arrayDetallesFactura));
            JasperViewer view = new JasperViewer(print,false);
            view.setVisible(true);
            view.setTitle("Factura " + facturaActual.getIdVenta());            
        } catch (JRException ex) {
            Logger.getLogger(FmrVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FmrHistorialFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FmrHistorialFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FmrHistorialFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FmrHistorialFacturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FmrHistorialFacturas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Anular;
    private javax.swing.JButton Btn_DetallesAnuladas;
    private javax.swing.JButton Btn_DetallesCompras;
    private javax.swing.JButton Btn_DetallesVentas;
    private javax.swing.JButton Btn_ImprimirFact;
    private javax.swing.JButton Btn_ImprimirFact1;
    private javax.swing.JButton Btn_RegresarA;
    private javax.swing.JButton Btn_RegresarC;
    private javax.swing.JButton Btn_RegresarV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_DetallesAnuladas;
    private javax.swing.JTable jTable_DetallesCompras;
    private javax.swing.JTable jTable_DetallesVentas;
    // End of variables declaration//GEN-END:variables
}
